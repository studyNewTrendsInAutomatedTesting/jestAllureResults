{"uid":"a6a379bc4abf1fee","name":"should create MongoDB database and three collections via API","fullName":"Smoke tests MongoDB database creation with three collections [\"counters\", \"transforms\", \"writers\"] via API","historyId":"7c71a88e60b6b6c2840416c38d0b8640:d41d8cd98f00b204e9800998ecf8427e","time":{"start":1707397953376,"stop":1707397975689,"duration":22313},"description":"This test checks MongoDB database and three collections creation","descriptionHtml":"<p>This test checks MongoDB database and three collections creation</p>\n","status":"failed","statusMessage":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'transforms' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'transforms' does not exist in database 'testdb'.\"","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'transforms' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'transforms' does not exist in database 'testdb'.\"\n    at /home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:236:50\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:5:58)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks MongoDB database and three collections creation","status":"failed","statusMessage":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'transforms' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'transforms' does not exist in database 'testdb'.\"","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'transforms' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'transforms' does not exist in database 'testdb'.\"\n    at /home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:236:50\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:5:58)","steps":[{"name":"Reading and verifying information from processed-monthly-summary-data topic","time":{"start":1707397953708,"stop":1707397968775,"duration":15067},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Sending GET request to app.js for checking that MongoDB collections exist","time":{"start":1707397953643,"stop":1707397975689,"duration":22046},"status":"broken","statusMessage":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'transforms' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'transforms' does not exist in database 'testdb'.\"","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'transforms' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'transforms' does not exist in database 'testdb'.\"\n    at /home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:236:50\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:5:58)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":2,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"jest"},{"name":"package","value":"test"},{"name":"thread","value":"1"},{"name":"host","value":"fv-az305-98"},{"name":"parentSuite","value":"Smoke tests"},{"name":"owner","value":"John Doe2"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Website","url":"https://dev.example.com/"},{"name":"AUTH-123","type":"issue"},{"name":"TMS-456","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"John Doe2","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a6a379bc4abf1fee.json","parameterValues":[]}