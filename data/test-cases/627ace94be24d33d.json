{"uid":"627ace94be24d33d","name":"should create MongoDB database and collection","fullName":"MongoDB database and collection creation","historyId":"6ab5428c99ab88d3a091fa61f7ecc347:d41d8cd98f00b204e9800998ecf8427e","time":{"start":1706861865197,"stop":1706861865363,"duration":166},"description":"This test checks MongoDB database and collection creation","descriptionHtml":"<p>This test checks MongoDB database and collection creation</p>\n","status":"failed","statusMessage":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"\n    at /home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:47:35\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks MongoDB database and collection creation","status":"failed","statusMessage":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"\n    at /home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:47:35\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","steps":[{"name":"Sending event to Kafka for MongoDB collection creation","time":{"start":1706861865201,"stop":1706861865312,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Sending event to Kafka for checking that MongoDB collection exists","time":{"start":1706861865312,"stop":1706861865359,"duration":47},"status":"broken","statusMessage":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"\n    at /home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:47:35\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/automatedTests/jest/test/kafkaMongoChecks.spec.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":2,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"jest"},{"name":"package","value":"test"},{"name":"thread","value":"1"},{"name":"host","value":"fv-az232-127"},{"name":"owner","value":"John Doe2"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Website","url":"https://dev.example.com/"},{"name":"AUTH-123","type":"issue"},{"name":"TMS-456","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"John Doe2","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"627ace94be24d33d.json","parameterValues":[]}