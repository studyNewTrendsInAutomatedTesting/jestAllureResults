{"uid":"311656ca81606f02","name":"should create MongoDB database and three collections via API","fullName":"MongoDB database creation with three collections [\"collection1\", \"collection2\", \"collection3\"] via API","historyId":"b149fd71bb977e29fb22bd9d41fa6340:d41d8cd98f00b204e9800998ecf8427e","time":{"start":1707230991074,"stop":1707231024360,"duration":33286},"description":"This test checks MongoDB database and three collections creation","descriptionHtml":"<p>This test checks MongoDB database and three collections creation</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks MongoDB database and three collections creation","status":"passed","steps":[{"name":"Sending GET request to app.js for checking that MongoDB collections exist","time":{"start":1707230991323,"stop":1707231023403,"duration":32080},"status":"broken","statusMessage":"Request failed with status code 500","statusTrace":"AxiosError: Request failed with status code 500\n    at settle (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/node_modules/axios/lib/core/settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/node_modules/axios/lib/adapters/http.js:589:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Sending GET request to app.js for checking that MongoDB collections exist","time":{"start":1707230991321,"stop":1707231024360,"duration":33039},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":2,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"jest"},{"name":"package","value":"test"},{"name":"thread","value":"1"},{"name":"host","value":"fv-az713-805"},{"name":"owner","value":"John Doe2"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Website","url":"https://dev.example.com/"},{"name":"AUTH-123","type":"issue"},{"name":"TMS-456","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"John Doe2","retries":[],"categories":[],"tags":[]},"source":"311656ca81606f02.json","parameterValues":[]}