{"uid":"4644085da832a40f","name":"should create MongoDB database and collection via API","fullName":"Full regression MongoDB database and collection creation via API","historyId":"326f6f8ca5cf8be3faa369f967011c9a:d41d8cd98f00b204e9800998ecf8427e","time":{"start":1709128095946,"stop":1709128107194,"duration":11248},"description":"This test checks MongoDB database and collection creation","descriptionHtml":"<p>This test checks MongoDB database and collection creation</p>\n","status":"failed","statusMessage":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"\n    at /home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/componentTests/jest/test/kafkaMongoChecks.spec.ts:113:46\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/componentTests/jest/test/kafkaMongoChecks.spec.ts:5:58)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks MongoDB database and collection creation","status":"failed","statusMessage":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"\n    at /home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/componentTests/jest/test/kafkaMongoChecks.spec.ts:113:46\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/componentTests/jest/test/kafkaMongoChecks.spec.ts:5:58)","steps":[{"name":"Sending POST request to app.js for MongoDB database creation","time":{"start":1709128095983,"stop":1709128096115,"duration":132},"status":"broken","statusMessage":"Request failed with status code 500","statusTrace":"AxiosError: Request failed with status code 500\n    at settle (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/node_modules/axios/lib/core/settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/node_modules/axios/lib/adapters/http.js:589:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:488:12)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Sending POST request to app.js for MongoDB database creation","time":{"start":1709128095984,"stop":1709128096131,"duration":147},"status":"broken","statusMessage":"Request failed with status code 500","statusTrace":"AxiosError: Request failed with status code 500\n    at settle (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/node_modules/axios/lib/core/settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/node_modules/axios/lib/adapters/http.js:589:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:488:12)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Sending POST request to app.js for MongoDB collection creation","time":{"start":1709128095953,"stop":1709128096155,"duration":202},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Sending event to Kafka for MongoDB collection creation","time":{"start":1709128095983,"stop":1709128096156,"duration":173},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Sending POST request to app.js for adding summarized monthly usage data","time":{"start":1709128096174,"stop":1709128096226,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Sending POST request to app.js for triggering data from MongoDB","time":{"start":1709128096226,"stop":1709128096238,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Sending GET request to app.js for checking that MongoDB collection exists","time":{"start":1709128096155,"stop":1709128107180,"duration":11025},"status":"broken","statusMessage":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"MongoDB collection 'testcollection' exists in database 'testdb'.\"\nReceived: \"MongoDB collection 'testcollection' does not exist in database 'testdb'.\"\n    at /home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/componentTests/jest/test/kafkaMongoChecks.spec.ts:113:46\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/applicationToTestFromDockerCompose/applicationToTestFromDockerCompose/componentTests/jest/test/kafkaMongoChecks.spec.ts:5:58)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":7,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"jest"},{"name":"package","value":"test"},{"name":"thread","value":"1"},{"name":"host","value":"fv-az392-481"},{"name":"parentSuite","value":"Full regression"},{"name":"owner","value":"John Doe2"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Website","url":"https://dev.example.com/"},{"name":"AUTH-123","type":"issue"},{"name":"TMS-456","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"John Doe2","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"4644085da832a40f.json","parameterValues":[]}